name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: read

env:
  NEXT_TELEMETRY_DISABLED: 1
  # Safe placeholders so Next.js can build during CI
  OPENAI_API_KEY: test
  NEXT_PUBLIC_SUPABASE_URL: http://localhost
  NEXT_PUBLIC_WIDGET_ORIGIN: http://localhost:3000

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install deps
        run: |
          if [ -f pnpm-lock.yaml ]; then pnpm i --frozen-lockfile; \
          elif [ -f package-lock.json ]; then npm ci; \
          else npm i; fi

      - name: Create minimal .env.local for build
        run: |
          echo "OPENAI_API_KEY=$OPENAI_API_KEY" >> .env.local
          echo "OPENAI_CHAT_MODEL=gpt-4o-mini" >> .env.local
          echo "OPENAI_EMBEDDING_MODEL=text-embedding-3-small" >> .env.local
          echo "NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL" >> .env.local
          echo "NEXT_PUBLIC_WIDGET_ORIGIN=$NEXT_PUBLIC_WIDGET_ORIGIN" >> .env.local

      - name: Typecheck
        run: |
          if [ -f tsconfig.json ]; then npx tsc -p . --noEmit; else echo "No tsconfig.json"; fi

      - name: Lint (if configured)
        run: |
          if [ -f package.json ] && jq -e '.scripts.lint' package.json >/dev/null; then npm run lint; else echo "No lint script"; fi

      - name: Build (if configured)
        run: |
          if [ -f package.json ] && jq -e '.scripts.build' package.json >/dev/null; then npm run build; else echo "No build script"; fi

      - name: Secret leak scan (fail if found)
        run: |
          set -e
          echo "Scanning for common secret patterns..."
          ! git grep -nE '(sk_live_|rk_live_|whsec_|SUPABASE_SERVICE_ROLE|STRIPE_SECRET_KEY|OPENAI_API_KEY)' -- ':!**/.github/**' ':!**/README*' || (echo '‚ùå Secret-like token found in repo. Remove or move to env.' && exit 1)

      - name: Client bundle guard
        run: |
          set -e
          # Client code should never import server-only modules
          ! git grep -nE 'from\s+"@/lib/supabaseAdmin"' -- 'app/**' 'components/**' 'public/**' || (echo '‚ùå Client importing server-only supabaseAdmin.' && exit 1)

      - name: EU-only heuristic lint (warn only)
        run: |
          set +e
          echo 'üîé Searching for US regions (heuristic)...'
          git grep -nE '(us-east|us-west|us-\w+-\d)' || true

      - name: Print size of client bundle (if Next.js)
        run: |
          if [ -d ".next" ]; then du -sh .next/static || true; fi
